name: Node.js Package

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]

jobs:
  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20] # Define the Node.js versions you want to test against
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          # Add other setup options as needed

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Test
        run: npm test

   version:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Set Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"

      - name: Version packages
        run: npx lerna version minor --yes --conventional-commits --no-private
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes
        run: git push origin HEAD:version-update

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: version-update
          title: 'Version update'
          body: 'This PR updates the package versions.'
          labels: versioning
  publish:
    needs: version
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.head.ref == 'version-update'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Publish packages
        run: npx lerna publish from-git --yes --no-private
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          LOG_LEVEL: silly
  # version-and-publish:
  #   needs: build
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [18] # Define the Node.js versions you want to publish with
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.node-version }}

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Set Git user
  #       run: |
  #         git config user.name "GitHub Actions"
  #         git config user.email "actions@users.noreply.github.com"

  #     # - name: Push changes
  #     #   run: |`
  #     #     git push origin version-update

  #     # - name: Version packages
  #     #   run: npx lerna version minor --yes --conventional-commits  --no-private
  #     #   env:
  #     #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Publish packages
  #       run: npx lerna publish from-git --yes --conventional-commits  --no-private
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  #         LOG_LEVEL: silly
